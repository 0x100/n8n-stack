name: Deploy n8n

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Copy repo to server (SCP)
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          source: "."
          target: "/opt/n8n"

      - name: Create .env on server
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            set -e
            sudo mkdir -p /opt/n8n
            sudo chown -R "$USER:$USER" /opt/n8n
            cd /opt/n8n
            cat > .env << 'EOF'
            DOMAIN=${{ secrets.DOMAIN }}
            LE_EMAIL=${{ secrets.LE_EMAIL }}
            N8N_ENCRYPTION_KEY=${{ secrets.N8N_ENCRYPTION_KEY }}
            N8N_BASIC_AUTH_ACTIVE=${{ secrets.N8N_BASIC_AUTH_ACTIVE }}
            N8N_BASIC_AUTH_USER=${{ secrets.N8N_BASIC_AUTH_USER }}
            N8N_BASIC_AUTH_PASSWORD=${{ secrets.N8N_BASIC_AUTH_PASSWORD }}
            EOF

      - name: Pull & up
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            set -e
            cd /opt/n8n

            if docker compose version >/dev/null 2>&1; then
              DC="docker compose"
            elif command -v docker-compose >/dev/null 2>&1; then
              DC="docker-compose"
            else
              sudo sed -i '/bullseye-backports/s/^/#/' /etc/apt/sources.list || true
              sudo sed -i '/bullseye-backports/s/^/#/' /etc/apt/sources.list.d/*.list 2>/dev/null || true
              sudo apt-get update -y || true

              if ! command -v docker >/dev/null 2>&1; then
                sudo apt-get install -y ca-certificates curl gnupg
                sudo install -m 0755 -d /etc/apt/keyrings
                curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
                echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian $(. /etc/os-release; echo $VERSION_CODENAME) stable" | sudo tee /etc/apt/sources.list.d/docker.list >/dev/null
                sudo apt-get update -y
                sudo apt-get install -y docker-ce docker-ce-cli containerd.io
              fi

              if ! docker compose version >/dev/null 2>&1; then
                sudo apt-get install -y docker-compose-plugin || true
              fi

              if docker compose version >/dev/null 2>&1; then
                DC="docker compose"
              else
                COMPOSE_VERSION="v2.29.7"
                curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /tmp/docker-compose
                sudo install /tmp/docker-compose /usr/local/bin/docker-compose
                DC="docker-compose"
              fi
            fi

            $DC pull
            $DC up -d
            $DC ps